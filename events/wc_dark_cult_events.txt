namespace = WCDAC

# Notifies family/friend/lover/spouse what FROM have become
# on_character_convert_religion
character_event = {
	id = WCDAC.149

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		evil_public_religion_trigger = yes
		FROM = { evil_public_religion_trigger = no }
	}

	immediate = {
		show_close_people_what_this_become_effect = yes
	}
}
# Notification
character_event = {
	id = WCDAC.150
	picture = GFX_evt_cemetery
	desc = {
		trigger = { has_character_flag = show_notification_undead_flag }
		text = EVTDESC_WCPOD_5014
		picture = GFX_evt_cemetery
	}
	desc = {
		trigger = { has_character_flag = show_notification_demon_flag }
		text = EVTDESC_WCDAC_150_demon
		picture = GFX_evt_burning_legion
	}
	# desc = {
		# trigger = { has_character_flag = show_notification_void_flag }
		# text = EVTDESC_WCDAC_150_void_creature
		# picture = GFX_evt_nraqi
	# }
	desc = {
		trigger = { has_character_flag = show_notification_worgen_flag }
		text = EVTDESC_WCDRU_5014
		picture = GFX_evt_worgen
	}
	desc = {
		trigger = {
			NOR = {
				has_character_flag = show_notification_undead_flag
				has_character_flag = show_notification_demon_flag
				# has_character_flag = show_notification_void_flag
				has_character_flag = show_notification_worgen_flag
			}
		}
		text = EVTDESC_WCDAC_150_evil
		picture = GFX_evt_cemetery
	}

	is_triggered_only = yes

	trigger = {
		FROM = { is_alive = yes }
	}

	option = {
		trigger = { FROM = { is_unholy_creature_to_prev_trigger = no } }
		# You're glad if you share the same evil religion
		name = {
			trigger = {
				evil_true_religion_trigger = yes
				FROM = { evil_public_religion_trigger = yes }
			}
			text = EVTOPTB_WCPOD_5014_glad
		}
		# You're not shocked
		name = {
			trigger = {
				OR = {
					is_dark_being_trigger = yes
					trait = worgen
					dark_true_religion_trigger = yes
				}
				FROM = {
					OR = {
						is_dark_being_trigger = yes
						trait = worgen
					}
				}
			}
			text = INTERESTING
		}
		# You're shocked
		name = {
			trigger = {
				NOR = {
					AND = {
						evil_true_religion_trigger = yes
						FROM = { evil_public_religion_trigger = yes }
					}
					AND = {
						OR = {
							is_dark_being_trigger = yes
							trait = worgen
							dark_true_religion_trigger = yes
						}
						FROM = {
							OR = {
								is_dark_being_trigger = yes
								trait = worgen
							}
						}
					}
				}
			}
			text = EVTOPTB_WCPOD_5014_shocked
		}

		ai_chance = {
			factor = 10
			modifier = {
				factor = 3.16
				opinion = { who = FROM value = 75 }
			}
			modifier = {
				factor = 3.16
				opinion = { who = FROM value = 50 }
			}
			modifier = {
				factor = 3.16
				opinion = { who = FROM value = 25 }
			}
			modifier = {
				factor = 3.16
				opinion = { who = FROM value = 10 }
			}
			modifier = {
				factor = 0
				NOT = { opinion = { who = FROM value = -25 } }
			}
		}
	}
	option = {
		trigger = { FROM = { is_unpleasant_creature_to_prev_trigger = yes } }
		name = {
			trigger = {
				OR = {
					is_married = FROM
					is_friend = FROM
					is_lover = FROM
					is_close_relative = FROM
				}
			}
			text = EVTOPTB_WCDAC_150_close	# IT... isn't my son/daughter/etc anymore!
		}
		name = {
			trigger = {
				NOR = {
					is_married = FROM
					is_friend = FROM
					is_lover = FROM
					is_close_relative = FROM
				}
			}
			text = EVTOPTB_WCDAC_150_stranger	# IT... isn't my son/daughter/etc anymore!
		}

		opinion = { modifier = opinion_accused_apostate who = FROM years = 20 }
		if = {
			limit = { is_married = FROM }
			remove_spouse = FROM
		}
		if = {
			limit = { is_friend = FROM }
			remove_friend = FROM
		}
		if = {
			limit = { is_lover = FROM }
			remove_lover = FROM
		}
		hidden_effect = {
			if = {
				limit = {
					is_adult = yes
					prisoner = no
					
					is_ruler = no
					liege = { character = FROM }
				}
				banish = yes
			}
			if = {
				limit = {
					FROM = {
						is_adult = yes
						prisoner = no
						
						is_ruler = no
						liege = { character = ROOT }
					}
				}
				FROM = { banish = yes }
			}
		}

		ai_chance = {
			factor = 90
		}
	}
	
	after = {
		clear_flags_with_prefix = show_notification_
	}
}

##########################
#	JUST EVENTS
##########################

############################
#	the Cult of the Damned
############################

# Notification from decision join_the_scourge
letter_event = {
	id = WCDAC.3940
	desc = EVTDESC_WCDAC_3940
	border = GFX_event_letter_frame_intrigue

	is_triggered_only = yes

	option = {
		name = EXCELLENT
	}
}

# Notification from decision found_cult_of_the_damned_society
narrative_event = {
	id = WCDAC.3950
	title = EVTTITLE_WCDAC_3950
	desc = EVTDESC_WCDAC_3950
	picture = GFX_evt_secret_ceremony

	is_triggered_only = yes

	major = yes
	major_trigger = {
		ai = no
	}
	# show_root = yes
	hide_from = yes

	option = {
		trigger = {
			NOR = {
				true_religion = death_god
				is_aggressive_trigger = yes
			}
			trait = zealous
		}
		name = EVTOPTA_WCDAC_3950_zealous
	}
	option = {
		trigger = {
			NOR = {
				true_religion = death_god
				is_aggressive_trigger = yes
			}
			trait = cynical
		}
		name = EVTOPTA_WCDAC_3950_cynical
	}
	option = {
		trigger = {
			NOR = {
				true_religion = death_god
				is_aggressive_trigger = yes
			}
			NOR = {
				trait = zealous
				trait = cynical
			}
		}
		name = EVTOPTA_WCDAC_3950_normal
	}
	option = {
		trigger = { true_religion = death_god }
		name = DEATH_IS_COMING
	}
	option = {
		trigger = {
			NOT = { true_religion = death_god }
			is_aggressive_trigger = yes
		}
		name = FOOLS
	}
}

############################
#	the Shadow Council
############################
# Appoints a Shadow Councilor to a free place
character_event = {
	id = WCDAC.4010

	is_triggered_only = yes
	hide_window = yes

	only_playable = yes

	trigger = {
		has_dlc = "Zeus"

		is_alive = yes
		is_dying = no

		can_have_shadow_council_member_trigger = yes
		OR = {
			NOT = { has_assigned_minor_title = title_shadow_council_member_1 }
			NOT = { has_assigned_minor_title = title_shadow_council_member_2 }
			NOT = { has_assigned_minor_title = title_shadow_council_member_3 }
		}
	}
	immediate = {
		save_event_target_as = target_loyal_ruler
		shadow_council = {
			random_society_member = {
				limit = { is_society_grandmaster = yes }
				character_event = { id = WCDAC.4014 days = 1 }
			}
		}
	}
}
character_event = {
	id = WCDAC.4014
	desc = EVTDESC_WCDAC_4014
	picture = GFX_evt_dark_portal_01

	is_triggered_only = yes

	# Appoint a local member of the Shadow Council
	option = {
		trigger = {
			event_target:target_loyal_ruler = {
				any_courtier_or_vassal = {
					NOT = { character = ROOT }
					NOT = { character = event_target:target_loyal_ruler }
					has_job_title = no
					has_minor_title = no
					society_member_of = shadow_council
				}
			}
		}
		name = EVTOPTA_WCDAC_4014

		event_target:target_loyal_ruler = {
			random_courtier_or_vassal = {
				limit = {
					NOT = { character = ROOT }
					NOT = { character = event_target:target_loyal_ruler }
					has_job_title = no
					has_minor_title = no
					society_member_of = shadow_council
				}
				character_event = { id = WCDAC.4017 }
			}
		}
		ai_chance = {
			factor = 75
		}
	}
	# Appoint your courtier
	option = {
		trigger = {
			any_courtier = {
				is_ruler = no

				NOT = { character = ROOT }
				NOT = { character = event_target:target_loyal_ruler }
				has_job_title = no
				has_minor_title = no
				society_member_of = shadow_council
			}
		}
		name = EVTOPTB_WCDAC_4014

		random_courtier = {
			limit = {
				is_ruler = no

				NOT = { character = ROOT }
				NOT = { character = event_target:target_loyal_ruler }
				has_job_title = no
				has_minor_title = no
				society_member_of = shadow_council
			}
			move_character = event_target:target_loyal_ruler
			character_event = { id = WCDAC.4017 }
		}
		ai_chance = {
			factor = 20
		}
	}
	# Appoint a new character
	option ={
		name = EVTOPTC_WCDAC_4014
		create_character = {
			dynasty = none
			religion = ROOT
			culture = ROOT
			female = no
			age = 40
			random_traits = yes
		}
		hidden_effect = {
			new_character = {
				join_society_shadow_council_effect = yes
				move_character = event_target:target_loyal_ruler
				character_event = { id = WCDAC.4017 }
			}
		}
		ai_chance = {
			factor = 5
		}
	}
}
character_event = {
	id = WCDAC.4017

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		FROM = { add_favor = ROOT }
		opinion = { modifier = opinion_loyal_servant who = FROM }
		if = {
			limit = {
				event_target:target_loyal_ruler = {
					NOT = { has_assigned_minor_title = title_shadow_council_member_1 }
				}
			}
			give_minor_title = title_shadow_council_member_1
		}
		else_if = {
			limit = {
				event_target:target_loyal_ruler = {
					NOT = { has_assigned_minor_title = title_shadow_council_member_2 }
				}
			}
			give_minor_title = title_shadow_council_member_2
		}
		else_if = {
			limit = {
				event_target:target_loyal_ruler = {
					NOT = { has_assigned_minor_title = title_shadow_council_member_3 }
				}
			}
			give_minor_title = title_shadow_council_member_3
		}
	}
}

# Power: Shadow Favor
# Your brother/sister asks for your favor
letter_event = {
	id = WCDAC.4020
	desc = EVTDESC_WCDAC_4020

	is_triggered_only = yes

	# I'll do it
	option = {
		name = EVTOPTA_WCDAC_4020

		tooltip = { reverse_add_favor = FROMFROM }
		add_society_currency_tiny_effect = yes
		FROMFROM = { letter_event = { id = WCDAC.4021 days = 1 } }

		ai_chance = {
			factor = 80

			# FROMFROM is a more powerful ruler than me
			modifier = {
				factor = 1.2
				FROMFROM = { higher_tier_than = ROOT }
			}
			# FROMFROM is an important member of my society
			modifier = {
				factor = 1.2
				FROMFROM = { society_rank == 4 }
			}
			modifier = {
				factor = 1.2
				FROMFROM = { society_rank >= 3 }
			}
			# I have a good opinion towards FROMFROM
			modifier = {
				factor = 1.2
				opinion = { who = FROMFROM value = 75 }
			}
			modifier = {
				factor = 1.2
				opinion = { who = FROMFROM value = 50 }
			}
			modifier = {
				factor = 1.2
				opinion = { who = FROMFROM value = 25 }
			}
			# I have a pleasant temper
			modifier = {
				factor = 1.2
				has_benevolent_trait_trigger = yes
			}
			modifier = {
				factor = 1.2
				has_pleasant_trait_trigger = yes
			}
		}
	}

	# No
	option = {
		name = EVTOPTB_WCDAC_4020

		FROMFROM = { letter_event = { id = WCDAC.4022 days = 1 } }

		ai_chance = {
			factor = 20

			# I'm a more powerful ruler than FROMFROM
			modifier = {
				factor = 2.5
				FROMFROM = { higher_tier_than = ROOT }
			}
			# I have a bad opinion towards FROMFROM
			modifier = {
				factor = 2.5
				NOT = { opinion = { who = FROMFROM value = 1 } }
			}
			# I have a unpleasant temper
			modifier = {
				factor = 2.5
				has_evil_trait_trigger = yes
			}
			modifier = {
				factor = 2.5
				has_unpleasant_trait_trigger = yes
			}
		}
	}
}
# "Yes" letter event
letter_event = {
	id = WCDAC.4021
	desc = EVTDESC_WCDAC_4021

	is_triggered_only = yes

	option = {
		name = EXCELLENT

		add_favor = FROM
	}
}

# "No" letter event
letter_event = {
	id = WCDAC.4022
	desc = EVTDESC_WCDAC_4022

	is_triggered_only = yes

	option = {
		name = ALAS
	}
}

# Power: Corrupt Character
# Increases fel corruption
character_event = {
	id = WCDAC.4030
	desc = EVTDESC_WCDAC_4030
	picture = GFX_evt_fel_storm

	is_triggered_only = yes
	
	hide_from = yes

	option = {
		name = ALAS

		add_5_fel_corruption_effect = yes
	}
}

##########################
# the Twilight's Hammer
##########################

###### The Twilight ######
# Ping event
province_event = {
	id = WCDAC.4999

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		# Starts "The Voice from Beyond the Sea" event chain
		province_event = { id = WCDAC.5029 years = 6 }
		d_twilights_hammer = {
			if = {
				limit = {
					has_holder = yes
					is_primary_holder_title = yes
				}
				holder_scope = { narrative_event = { id = WCDAC.5000 } }
			}
		}
	}
}
# What's wrong with my clan?
narrative_event = {
	id = WCDAC.5000
	title = EVTTITLE_WCDAC_5000
	desc = EVTDESC_WCDAC_5000
	picture = GFX_evt_voidwalker
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	# Find out from them what's going on
	option = {
		name = EVTOPTA_WCDAC_5000

		add_5_void_corruption_effect = yes

		hidden_effect = { 73 = { province_event = { id = WCDAC.5009 days = 90 } } }
	}
	# Suppress them!
	option = {
		name = EVTOPTB_WCDAC_5000

		if = {
			limit = { trait = kind }
			remove_trait = kind
		}

		hidden_effect = { 73 = { province_event = { id = WCDAC.5004 days = 3 } } }

		ai_chance = {
			factor = 0
		}
	}
}
# Ping event
province_event = {
	id = WCDAC.5004

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = { FROM = { is_alive = yes } }
			FROM = { narrative_event = { id = WCDAC.5005 } }
		}
		else_if = {
			limit = {
				d_twilights_hammer = {
					has_holder = yes
					is_primary_holder_title = yes
				}
			}
			d_twilights_hammer = { holder_scope = { narrative_event = { id = WCDAC.5005 } } }
		}
	}
}
# You've lost your clan
narrative_event = {
	id = WCDAC.5005
	title = EVTTITLE_WCDAC_5000
	desc = EVTDESC_WCDAC_5005
	picture = GFX_evt_voidwalker
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	# Yeah, I've lost my clan
	option = {
		name = EVTOPTA_WCDAC_5005

		d_twilights_hammer = {
			activate_title = { title = THIS status = no }
			destroy_landed_title = THIS
		}
		if = {
			limit = { liege = { NOT = { religion = old_gods_worship } } }
			banish_religion = old_gods_worship
			liege = {
				show_scope_change = no
				any_realm_province = {
					limit = { religion = old_gods_worship }
					show_scope_change = no
					religion = PREV
					culture = PREV
				}
			}
		}
	}
}
# Ping event
province_event = {
	id = WCDAC.5009

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = { FROM = { is_alive = yes } }
			FROM = { narrative_event = { id = WCDAC.5010 } }
		}
		else_if = {
			limit = {
				d_twilights_hammer = {
					has_holder = yes
					is_primary_holder_title = yes
				}
			}
			d_twilights_hammer = { holder_scope = { narrative_event = { id = WCDAC.5010 } } }
		}
	}
}
# They tells you the TRUTH!
narrative_event = {
	id = WCDAC.5010
	title = EVTTITLE_WCDAC_5000
	desc = EVTDESC_WCDAC_5010
	picture = GFX_evt_voidwalker
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	# The Old Gods are good guys!
	option = {
		name = EVTOPTA_WCDAC_5010

		add_5_void_corruption_effect = yes

		if = {
			limit = { trait = kind }
			remove_trait = kind
		}
		if = {
			limit = { trait = charitable }
			remove_trait = charitable
		}

		hidden_effect = { 73 = { province_event = { id = WCDAC.5014 days = 90 } } }
	}
}
# Ping event
province_event = {
	id = WCDAC.5014

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = { FROM = { is_alive = yes } }
			FROM = { narrative_event = { id = WCDAC.5015 } }
		}
		else_if = {
			limit = {
				d_twilights_hammer = {
					has_holder = yes
					is_primary_holder_title = yes
				}
			}
			d_twilights_hammer = { holder_scope = { narrative_event = { id = WCDAC.5015 } } }
		}
	}
}
# You believed in the Old Gods
narrative_event = {
	id = WCDAC.5015
	title = EVTTITLE_WCDAC_5000
	desc = EVTDESC_WCDAC_5015
	picture = GFX_evt_voidwalker
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	# Hear the voice of the Old Gods!
	option = {
		name = EVTOPTA_WCDAC_5015

		add_15_void_corruption_effect = yes

		set_secret_religion = old_gods_worship
		if = {
			limit = { NOT = { trait = cruel } }
			if = {
				limit = { trait = kind }
				remove_trait = kind
			}
			add_trait = cruel
		}
		add_artifact = twilight_canticle
	}
}

###### The Voice from Beyond the Sea #######
# Ping event
province_event = {
	id = WCDAC.5029

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = {
				d_twilights_hammer = {
					has_holder = yes
					holder_scope = {
						old_gods_chosen_event_trigger = yes
						location = { region = world_eastern_kingdoms }
					}
				}
			}
			d_twilights_hammer = { holder_scope = { narrative_event = { id = WCDAC.5030 } } }
		}
		else_if = {
			limit = {
				any_player = {
					is_incapable = no
					is_inaccessible_trigger = no

					old_gods_chosen_event_trigger = yes
					location = { region = world_eastern_kingdoms }
				}
			}
			random_player = {
				limit = {
					is_incapable = no
					is_inaccessible_trigger = no

					old_gods_chosen_event_trigger = yes
					location = { region = world_eastern_kingdoms }
				}
				narrative_event = { id = WCDAC.5030 }
			}
		}
		else = {
			province_event = { id = WCDAC.5039 days = 90 }
		}
	}
}
# Beginning of Sea Travel
narrative_event = {
	id = WCDAC.5030
	title = EVTTITLE_WCDAC_5030
	desc = EVTDESC_WCDAC_5030
	picture = GFX_evt_cthun
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	immediate = {
		add_traveling_immunity_effect = yes
		set_character_flag = important_old_god_task_flag
	}

	# I will fulfill the will of the Gods!
	option = {
		name = EVTOPTA_WCDAC_5030
		
		custom_tooltip = { text = chogall_journey_length }
		hidden_effect = { remove_old_gods_follower_modifier_effect = yes }
		add_character_modifier = { name = follower_of_cthun duration = -1 }
		set_global_flag = twilights_hammer_kalimdor
		
		ai_chance = {
			factor = 75
		}
		
	}
	option = {
		name = EVTOPTB_WCDAC_5030
		
		custom_tooltip = { text = chogall_journey_length }
		hidden_effect = { remove_old_gods_follower_modifier_effect = yes }
		add_character_modifier = { name = follower_of_yogg_saron duration = -1 }
		
		ai_chance = {
			factor = 25
			#If any player plays qiraji, Cho'gall will go Kalimdor
			modifier = {
				factor = 0
				any_player = { is_locked_qiraji_trigger = yes }
			}
		}
	}
	after = {
		hidden_effect = { 73 = { province_event = { id = WCDAC.5034 years = 4 } } }
	}
}
# Ping event
province_event = {
	id = WCDAC.5034

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = { FROM = { old_gods_chosen_event_trigger = yes } }
			FROM = { narrative_event = { id = WCDAC.5035 } }
		}
		else_if = {
			limit = {
				d_twilights_hammer = {
					has_holder = yes
					holder_scope = { old_gods_chosen_event_trigger = yes }
				}
			}
			FROM = {
				remove_traveling_immunity_effect = yes
				clr_character_flag = important_old_god_task_flag
			}
			d_twilights_hammer = { holder_scope = { narrative_event = { id = WCDAC.5035 } } }
		}
		else = {
			FROM = {
				remove_traveling_immunity_effect = yes
				clr_character_flag = important_old_god_task_flag
			}
			province_event = { id = WCDAC.5039 days = 90 }
		}
	}
}
# Arrival in Kalimdor
narrative_event = {
	id = WCDAC.5035
	title = EVTTITLE_WCDAC_5030
	picture = GFX_evt_ahnqiraj
	desc = {
		trigger = {
			has_global_flag = twilights_hammer_kalimdor
		}
		text = EVTDESC_WCDAC_5035_kalimdor
		picture = GFX_evt_ahnqiraj
	}
	desc = {
		trigger = {
			NOT = { has_global_flag = twilights_hammer_kalimdor }
		}
		text = EVTDESC_WCDAC_5035_northrend
		picture = GFX_evt_yogg_saron
	}
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes
	
	immediate = {
		add_traveling_immunity_effect = yes
	}

	# Let's continue the journey.
	option = {
		name = EVTOPTA_WCDAC_5035

		hidden_effect = { 73 = { province_event = { id = WCDAC.5039 days = 7 } } }
	}
}
# Ping event
province_event = {
	id = WCDAC.5039

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = { FROM = { old_gods_chosen_event_trigger = yes } }
			FROM = { narrative_event = { id = WCDAC.5040 } }
		}
		else_if = {
			limit = {
				d_twilights_hammer = {
					has_holder = yes
					holder_scope = { old_gods_chosen_event_trigger = yes }
				}
			}
			FROM = {
				remove_traveling_immunity_effect = yes
				clr_character_flag = important_old_god_task_flag
			}
			d_twilights_hammer = { holder_scope = { narrative_event = { id = WCDAC.5040 } } }
		}
		else = {
			FROM = {
				remove_traveling_immunity_effect = yes
				clr_character_flag = important_old_god_task_flag
			}
			create_character = {
				dynasty = none
				religion = old_gods_worship
				culture = azerothian
				female = no
				age = 45
				random_traits = yes
				trait = creature_human
				trait = elusive_shadow
				trait = cruel
				trait = zealous
				trait = ambitious
			}
			new_character = {
				set_character_flag = important_old_god_task_flag

				ai_add_shadow_priest_class_effect = yes
				#Makes him follow old god that's on the continent he's travelling to
				if = {
					limit = { has_global_flag = twilights_hammer_kalimdor }
					add_character_modifier = { name = follower_of_cthun duration = -1 }
				}
				else = {
					add_character_modifier = { name = follower_of_yogg_saron duration = -1 }
				}
				narrative_event = { id = WCDAC.5040 }
			}
		}
	}
}
# Settles new base on continent
narrative_event = {
	id = WCDAC.5040
	title = EVTTITLE_WCDAC_5030
	picture = GFX_evt_ahnqiraj
	desc = {
		trigger = {
			has_global_flag = twilights_hammer_kalimdor
		}
		text = EVTDESC_WCDAC_5040_kalimdor
		picture = GFX_evt_ahnqiraj
	}
	desc = {
		trigger = {
			NOT = { has_global_flag = twilights_hammer_kalimdor }
		}
		text = EVTDESC_WCDAC_5040_northrend
		picture = GFX_evt_yogg_saron
	}
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	immediate = {
		# Used in scripted effects
		save_event_target_as = target_settler

		religion = old_gods_worship

		remove_traveling_immunity_effect = yes

		any_courtier = {
			limit = {
				culture = twilights_hammer
				can_switch_religion_character_trigger = yes
			}
			religion = old_gods_worship
		}

		if = {
			limit = { has_global_flag = twilights_hammer_kalimdor }
			c_southmoon = {
				# event_target:target_settler and its people settle here
				settle_as_target_settler_effect = yes
			}

			# If you're not independent ruler, gives old titles to liege
			give_old_titles_to_heir_effect = yes

			c_southmoon = {
				# Declares war against player
				target_settler_declare_war_effect = yes
			}
		}
		else = {
			c_strand_of_ancients = {
				# event_target:target_settler and its people settle here
				settle_as_target_settler_effect = yes
			}

			# If you're not independent ruler, gives old titles to liege
			give_old_titles_to_heir_effect = yes
			
			c_strand_of_ancients = {
				# Declares war against player
				target_settler_declare_war_effect = yes
			}
		}

		clear_settler_flag_effect = yes
		
		# Spawns army for start
		spawn_colonial_troops_effect = yes
	}

	# I'll spread its will across Kalimdor/Northrend!
	option = {
		name = EVTOPTA_WCDAC_5040

		if = {
			limit = {
				potential_shadow_priest_wo_training_trigger = yes
				is_magic_class_trigger = yes
			}
			hidden_effect = {
				add_character_modifier = { name = training_self_shadow_priest duration = -1 }
				recount_experience_effect = yes
				narrative_event = { id = WCCLS.1300 }
			}
		}
		if = {
			limit = { NOT = { trait = zealous } }
			add_trait = zealous
		}

		set_global_flag = twilights_hammer_cult_active_flag
		join_society_twilights_hammer_cult_effect = yes
		hidden_effect = {
			set_society_grandmaster = yes # Set character as Grand Master
			add_society_currency_massive_effect = yes # Give the Grand Master a start-up capital to induct members
		}

		add_35_void_corruption_effect = yes

		hidden_effect = {
			activate_title = { title = d_twilights_hammer status = no }
			d_twilights_hammer = { destroy_landed_title = THIS }
			any_playable_ruler = {
				limit = {
					ai = yes
					tier = COUNT
				}
				character_event = { id = MNM.10030 }
			}
			narrative_event = { id = WCDAC.5050 }
			
			# Sets targets before event chain
			c_52000 = { save_event_target_as = target_chogall }
			c_10620 = { save_event_target_as = target_garona }
			if = {
				limit = {
					garona_hunt_chain_trigger = yes
					event_target:target_garona = { is_inaccessible_trigger = no }
				}
				event_target:target_garona = { add_traveling_immunity_effect = yes }
				
				character_event = { id = WCDAC.5041 days = 7 }
			}
			
			73 = { province_event = { id = WCDAC.5075 years = 5 } }
		}
	}
}
# Garona kills character
character_event = {
	id = WCDAC.5041
	desc = {
		trigger = { NOT = { has_character_flag = hunted_by_garona } }
		text = EVTDESC_WCDAC_5041_first_kill
	}
	desc = {
		trigger = {
			has_character_flag = hunted_by_garona 
		}
		text = EVTDESC_WCDAC_5041_later_kills
	}
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	portrait = event_target:target_killed

	is_triggered_only = yes
	
	trigger = {
		garona_hunt_chain_trigger = yes
		any_courtier = {
			is_possible_garona_target_trigger = yes
		}
	}
	
	fail_trigger_effect = {
		# Skip event
		garona_hunt_chain_skip_effect = yes
	}
	
	immediate = {
		hidden_effect = {
			event_target:target_garona = { add_traveling_immunity_effect = yes }
			random_courtier = {
				limit = { is_possible_garona_target_trigger = yes }
				save_event_target_as = target_killed
				death = { death_reason = death_battle killer = event_target:target_garona }
			}
		}
	}

	# Let's continue the journey.
	option = {
		name = EVTOPTA_WCDAC_5041
		trigger = { NOT = { has_character_flag = hunted_by_garona } }

		set_character_flag = hunted_by_garona
		hidden_effect = { set_variable = { which = local_garona_kills value = 1 } }
	}
	option = {
		name = EVTOPTB_WCDAC_5041
		trigger = { has_character_flag = hunted_by_garona }
	}
	after = {
		hidden_effect = { change_variable = { which = local_garona_kills value = 1 } }
		if = {
			limit = { check_variable = { which = local_garona_kills value = 5 } }
			character_event = { id = WCDAC.5042 months = 6 }
		}
		else = {
			character_event = { id = WCDAC.5041 months = 10 random = 90 }
		}
	}
}
# Searches for Garona
character_event = {
	id = WCDAC.5042
	desc = EVTDESC_WCDAC_5042
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	
	trigger = {
		garona_hunt_chain_trigger = yes
	}
	
	fail_trigger_effect = {
		# Skip event
		garona_hunt_chain_skip_effect = yes
	}
	
	immediate = {
		add_traveling_immunity_effect = yes
	}

	option = {
		name = EVTOPTA_WCDAC_5042
		
		character_event = { id = WCDAC.5043 months = 14 }
	}
}
# Imprisons Garona
character_event = {
	id = WCDAC.5043
	desc = EVTDESC_WCDAC_5043
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	
	trigger = {
		garona_hunt_chain_trigger = yes
	}
	
	fail_trigger_effect = {
		# Skip event
		garona_hunt_chain_skip_effect = yes
		remove_traveling_immunity_effect = yes
	}

	option = {
		name = EVTOPTA_WCDAC_5043
		
		clr_character_flag = hunted_by_garona
		remove_traveling_immunity_effect = yes
		event_target:target_garona = {
			remove_traveling_immunity_effect = yes
			move_character = PREV
		}
		reverse_imprison = event_target:target_garona
		character_event = { id = WCDAC.5044 days = 1 }
	}
}
# Subjugates Garona
character_event = {
	id = WCDAC.5044
	desc = EVTDESC_WCDAC_5044
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WCDAC_5044
		
		reverse_opinion = { modifier = opinion_loyal_servant who = event_target:target_garona }
		event_target:target_garona = { imprison = no }
	}
}
### Travels closer to the Old God
#Delayer event
province_event = {
	id = WCDAC.5075
	
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		if = {
			limit = { FROM = { old_gods_chosen_event_trigger = yes } }
			FROM = { narrative_event = { id = WCDAC.5045 } }
		}
		else = {
			FROM = {
				remove_traveling_immunity_effect = yes
				clr_character_flag = important_old_god_task_flag
			}
			province_event = { id = WCDAC.5076 days = 90 }
		}
	}
}
#Delayed event
character_event = {
	id = WCDAC.5045
	desc = EVTDESC_WCDAC_5045
	picture = {
		trigger = { has_global_flag = twilights_hammer_kalimdor }
		picture = GFX_evt_ahnqiraj
	}
	picture = {
		trigger = { NOT = { has_global_flag = twilights_hammer_kalimdor } }
		picture = GFX_evt_yogg_saron
	}
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	
	immediate = {
		add_traveling_immunity_effect = yes
	}

	option = {
		name = EVTOPTA_WCDAC_5045
		
		73 = { province_event = { id = WCDAC.5076 years = 2 } }
	}
}
### The Ruins of Ahn'Qiraj and Darkness in Uldaur
#Delayer event
province_event = {
	id = WCDAC.5076
	
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		if = {
			limit = { FROM = { old_gods_chosen_event_trigger = yes } }
			FROM = { narrative_event = { id = WCDAC.5046 } }
		}
		else = {
			FROM = {
				remove_traveling_immunity_effect = yes
				clr_character_flag = important_old_god_task_flag
			}
			create_character = {
				dynasty = none
				religion = old_gods_worship
				culture = azerothian
				female = no
				age = 45
				random_traits = yes
				trait = creature_human
				trait = elusive_shadow
				trait = cruel
				trait = zealous
				trait = ambitious
			}
			new_character = {
				set_character_flag = important_old_god_task_flag
				
				ai_add_shadow_priest_class_effect = yes
				#Makes him follow old god that's on the continent he's travelling to
				if = {
					limit = { has_global_flag = twilights_hammer_kalimdor }
					add_character_modifier = { name = follower_of_cthun duration = -1 }
				}
				else = {
					add_character_modifier = { name = follower_of_yogg_saron duration = -1 }
				}
				narrative_event = { id = WCDAC.5046 }
			}
		}
	}
}
#Delayed event
narrative_event = {
	id = WCDAC.5046
	title = EVTTITLE_WCDAC_5030
	picture = GFX_evt_ahnqiraj
	desc = {
		trigger = {
			has_global_flag = twilights_hammer_kalimdor
		}
		text = EVTDESC_WCDAC_5046_kalimdor
		picture = GFX_evt_ahnqiraj
	}
	desc = {
		trigger = {
			NOT = { has_global_flag = twilights_hammer_kalimdor }
		}
		text = EVTDESC_WCDAC_5046_northrend
		picture = GFX_evt_yogg_saron
	}
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	immediate = {
		# Used in scripted effects
		save_event_target_as = target_settler
		
		religion = old_gods_worship
		
		remove_traveling_immunity_effect = no

		if = {
			limit = { has_global_flag = twilights_hammer_kalimdor }
			c_hivezora = {
				# event_target:target_settler and its people settle here
				settle_as_target_settler_effect = yes
				location = { culture = qiraji }
			}
			# If you're not independent ruler, gives old titles to liege
			give_old_titles_to_heir_effect = yes
			c_hiveashi = {
				# event_target:target_settler and its people settle here
				settle_as_target_settler_effect = yes
				location = { culture = qiraji }
			}
			c_crystalvale = {
				settle_as_target_settler_effect = yes
				location = { culture = qiraji }
			}
			c_ishrak = {
				settle_as_target_settler_effect = yes
				location = { culture = qiraji }
			}
			c_ashakx = {
				settle_as_target_settler_effect = yes
				location = { culture = qiraji }
			}
			c_hiveregal = {
				settle_as_target_settler_effect = yes
				location = { culture = qiraji }
			}
			c_scarab_wall = {
				settle_as_target_settler_effect = yes
				location = { culture = qiraji }
			}
			c_hivezora = {
				# Declares war against player
				target_settler_declare_war_effect = yes
			}
		}
		else = {
			c_bouldercrag = {
				# event_target:target_settler and its people settle here
				settle_as_target_settler_effect = yes
				location = { culture = titanforged }
			}
			# If you're not independent ruler, gives old titles to liege
			give_old_titles_to_heir_effect = yes
			c_snowdrift = {
				# event_target:target_settler and its people settle here
				settle_as_target_settler_effect = yes
				location = { culture = titanforged }
			}
			c_nidavelir = {
				settle_as_target_settler_effect = yes
				location = { culture = titanforged }
			}
			c_bouldercrag = {
				# Declares war against player
				target_settler_declare_war_effect = yes
			}
		}

		clear_settler_flag_effect = yes
	}

	# I'll spread its will across Kalimdor!
	option = {
		name = EVTOPTA_WCDAC_5046
		
		if = {
			limit = {
				NOT = {
					has_game_rule = {
						name = old_god_black_empire_invasion
						value = off
					}
				}
			}
			save_event_target_as = target_chosen
			
			73 = { province_event = { id = WCDAC.5077 } }
		}
	}
}
### Comes close enough to awaken an Old God
#Delayer event
province_event = {
	id = WCDAC.5077
	
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		if = {
			limit = { event_target:target_chosen = { old_gods_chosen_event_trigger = yes } }
			event_target:target_chosen = { narrative_event = { id = WCDAC.5047 } }
		}
		else = {
			event_target:target_chosen = {
				remove_traveling_immunity_effect = yes
				clr_character_flag = important_old_god_task_flag
			}
			create_character = {
				dynasty = none
				religion = old_gods_worship
				culture = azerothian
				female = no
				age = 45
				random_traits = yes
				trait = creature_human
				trait = elusive_shadow
				trait = cruel
				trait = zealous
				trait = ambitious
			}
			new_character = {
				set_character_flag = important_old_god_task_flag
				
				ai_add_shadow_priest_class_effect = yes
				#Makes him follow old god that's on the continent he's travelling to
				if = {
					limit = { has_global_flag = twilights_hammer_kalimdor }
					add_character_modifier = { name = follower_of_cthun duration = -1 }
				}
				else = {
					add_character_modifier = { name = follower_of_yogg_saron duration = -1 }
				}
				character_event = { id = WCDAC.5047 }
			}
		}
	}
}
#Delayed event
narrative_event = {
	id = WCDAC.5047
	title = EVTTITLE_WCDAC_5030
	picture = GFX_evt_cthun
	desc = {
		trigger = {
			has_global_flag = twilights_hammer_kalimdor
		}
		text = EVTDESC_WCDAC_5047_kalimdor
		picture = GFX_evt_cthun
	}
	desc = {
		trigger = {
			NOT = { has_global_flag = twilights_hammer_kalimdor }
		}
		text = EVTDESC_WCDAC_5047_northrend
		picture = GFX_evt_yogg_saron
	}
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes
	
	immediate = {
		# Used in scripted effects
		save_event_target_as = target_settler
		
		if = {
			limit = { NOT = { has_global_flag = twilights_hammer_kalimdor } }
			d_ulduar = {
				any_de_jure_vassal_title = {
					location = {
						remove_province_modifier = ulduar_closed_down
					}
				}
			}
			if = {
				limit = {
					ai = no
					c_ulduar = {
						holder_scope = {
							ai = yes
							NOT = { any_liege = { ai = no } }
						}
					}
				}
				c_ulduar = {
					# event_target:target_settler and its people settle here
					settle_as_target_settler_effect = yes
					location = { culture = titanforged }
				}
				# If you're not independent ruler, gives old titles to liege
				give_old_titles_to_heir_effect = yes
				d_ulduar = {
					any_direct_de_jure_vassal_title = {
						# event_target:target_settler and its people settle here
						settle_as_target_settler_effect = yes
						location = { culture = titanforged }
					}
				}
				c_ulduar = {
					# Declares war against player
					target_settler_declare_war_effect = yes
				}
			}
			else_if = {
				limit = {
					c_ulduar = {
						holder_scope = {
							top_liege = { religion = old_gods_worship }
						}
					}
				}
				c_ulduar = {
					holder_scope = {
						top_liege = {
							set_defacto_vassal = ROOT
						}
					}
				}
			}
		}
		else = {
			if = {
				limit = {
					ai = no
					c_ahnqiraj = {
						holder_scope = {
							ai = yes
							NOT = { any_liege = { ai = no } }
						}
					}
				}
				c_ahnqiraj = {
					# event_target:target_settler and its people settle here
					settle_as_target_settler_effect = yes
					location = { culture = qiraji }
				}
				# If you're not independent ruler, gives old titles to liege
				give_old_titles_to_heir_effect = yes
				d_ahnqiraj = {
					any_direct_de_jure_vassal_title = {
						# event_target:target_settler and its people settle here
						settle_as_target_settler_effect = yes
						location = { culture = qiraji }
					}
				}
				c_ahnqiraj = {
					# Declares war against player
					target_settler_declare_war_effect = yes
				}
			}
			else_if = {
				limit = {
					c_ahnqiraj = {
						holder_scope = {
							top_liege = { religion = old_gods_worship }
						}
					}
				}
				c_ahnqiraj = {
					holder_scope = {
						top_liege = {
							set_defacto_vassal = ROOT
						}
					}
				}
			}
		}
		
		clear_settler_flag_effect = yes
	}
	
	option = {
		name = EVTOPTA_WCDAC_5047

		any_courtier = {
			limit = {
				religion = old_gods_worship
				culture = twilights_hammer
				
				is_unimportant_trigger = yes
			}
			death = { death_reason = death_sacrificed }
		}
		
		character_event = { id = WCOME.300 }
		
		if = {
			limit = { has_global_flag = twilights_hammer_kalimdor }
			clr_global_flag = twilights_hammer_kalimdor
		}
		clr_character_flag = important_old_god_task_flag
	}
}
# Notification of creation of the Twilight's Hammer Cult
narrative_event = {
	id = WCDAC.5050
	title = EVTTITLE_WCDAC_5050
	desc = EVTDESC_WCDAC_5050
	picture = GFX_evt_shadow_acolytes

	is_triggered_only = yes

	major = yes
	major_trigger = {
		ai = no
	}
	# show_root = yes
	hide_from = yes

	option = {
		trigger = {
			NOR = {
				true_religion = old_gods_worship
				is_aggressive_trigger = yes
			}
			trait = zealous
		}
		name = EVTOPTA_WCDAC_3950_zealous
	}
	option = {
		trigger = {
			NOR = {
				true_religion = old_gods_worship
				is_aggressive_trigger = yes
			}
			trait = cynical
		}
		name = EVTOPTA_WCDAC_3950_cynical
	}
	option = {
		trigger = {
			NOR = {
				true_religion = old_gods_worship
				is_aggressive_trigger = yes
			}
			NOR = {
				trait = zealous
				trait = cynical
			}
		}
		name = EVTOPTA_WCDAC_3950_normal
	}
	option = {
		trigger = { true_religion = old_gods_worship }
		name = EVTOPTA_WCDAC_5050_old_gods_worship
	}
	option = {
		trigger = {
			NOT = { true_religion = old_gods_worship }
			is_aggressive_trigger = yes
		}
		name = FOOLS
	}
}

# Power: Attract Old Gods' Attention
# Notifies that something is watching you
character_event = {
	id = WCDAC.5100
	desc = EVTDESC_WCDAC_5100
	picture = GFX_evt_cthun
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	hide_from = yes

	# It's not good
	option = {
		name = EVTOPTA_WCDAC_5100
		tooltip = { add_character_modifier = { name = dark_presence duration = 1825 } }
	}
}

# on_new_holder of e_scourge e_burning_legion e_black_empire
# Gives traits when character gets e_scourge e_burning_legion e_black_empire
character_event = {
	id = WCDAC.5200

	is_triggered_only = yes
	hide_window = yes
	
	only_playable = yes
	only_independent = yes

	trigger = {
		FROM = {
			OR = {
				title = e_scourge
				title = e_burning_legion
				title = e_black_empire
			}
		}
	}

	immediate = {
		log = "WCDAC.5200 fired for [Root.GetBestName]"

		#e_scourge
		if = {
			limit = { FROM = { title = e_scourge } }
			if = {
				limit = {
					NOT = { trait = being_undead }
					can_be_undead_trigger = yes
				}
				set_character_flag = transition_into_lich_flag
				character_event = { id = WCPOD.5013 }
			}
			clear_secret_religion = yes
			if = {
				limit = {
					NOR = {
						religion = death_god
						religion = burning_legion_religion
					}
				}
				religion = death_god
			}
			culture = scourge
			add_trait = lich_king
			
			FROMFROM = {
				if = {
					limit = { is_ruler = yes }
					this_abdicate_transfer_wealth_to_play_prev_effect = yes
				}
				if = {
					limit = {
						is_alive = yes
						is_dying = no
					}
					death = { death_reason = death_merged killer = ROOT }
				}
				remove_trait = lich_king
			}
			
			character_event = { id = WCUND.1106 days = 1 }
			narrative_event = { id = WCUND.551 }
		}
		#e_burning_legion
		if = {
			limit = { FROM = { title = e_burning_legion } }
			clear_secret_religion = yes
			if = {
				limit = { NOT = { religion = burning_legion_religion } }
				religion = burning_legion_religion
			}
			add_character_modifier = { name = legion_overlord duration = -1 }
			
			FROMFROM = {
				if = {
					limit = { has_character_modifier = legion_overlord }
					remove_character_modifier = legion_overlord
				}
			}
		}
		#e_black_empire
		if = {
			limit = { FROM = { title = e_black_empire } }
			clear_secret_religion = yes
			if = {
				limit = { NOT = { religion = old_gods_worship } }
				religion = old_gods_worship
			}
			add_character_modifier = { name = black_empire_overlord duration = -1 }
			
			FROMFROM = {
				if = {
					limit = { has_character_modifier = black_empire_overlord }
					remove_character_modifier = black_empire_overlord
				}
			}
		}
	}
}

# Fired from decision patrons_old_gods_worship
character_event = {
	id = WCDAC.5110
	desc = EVTDESC_WCDAC_5110
	picture = GFX_evt_cthun
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WCDAC_5110

		add_character_modifier = {
			name = follower_of_cthun
			duration = -1
		}
		ai_chance = {
			factor = 25
			prefers_cthun_score = yes
			stewardship_score = yes
		}
	}
	option = {
		trigger = { is_locked_qiraji_trigger = no } #Qiraji can pick only C'Thun since they're sealed with him
		name = EVTOPTB_WCDAC_5110

		add_character_modifier = {
			name = follower_of_yogg_saron
			duration = -1
		}
		ai_chance = {
			factor = 25
			prefers_yogg_saron_score = yes
			learning_score = yes
		}
	}
	# option = {
		# name = EVTOPTC_WCDAC_5110
		# add_character_modifier = {
			# name = follower_of_yshaarj
			# duration = -1
		# }
		# ai_chance = {
			# factor = 25
			# modifier = {
				# factor = 5
				# culture = mantid
			# }
			# modifier = {
				# factor = 4
				# has_education_martial_trigger = yes
			# }
			# modifier = {
				# factor = 0.1
				# NOT = { has_character_modifier = follower_of_yshaarj }
			# }
		# }
	# }
	option = {
		trigger = { is_locked_qiraji_trigger = no }	#Qiraji can pick only C'Thun since they're sealed with him
		name = EVTOPTD_WCDAC_5110

		add_character_modifier = {
			name = follower_of_nzoth
			duration = -1
		}
		ai_chance = {
			factor = 25
			prefers_nzoth_score = yes
			intrigue_score = yes
		}
	}
}

# on_county_religion_change
# Destroy trade post when province converts to/from evil religions
province_event = {
	id = WCDAC.9992

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_trade_post = yes
		owner_can_have_trade_post_trigger = no
	}

	immediate = {
		trade_post_owner = {
			destroy_tradepost = ROOT
			if = {
				limit = { ai = no }
				character_event = { id = WCDAC.9993 }
			}
		}
	}
}
# Notification
character_event = {
	id = WCDAC.9993
	desc = {
		trigger = { evil_public_religion_trigger = yes }
		text = EVTDESC_WCDAC_9993_evil
	}
	desc = {
		trigger = { evil_public_religion_trigger = no }
		text = EVTDESC_WCDAC_9993_normal
	}
	picture = GFX_evt_trade_post_republic
	border = GFX_event_normal_frame_economy
	
	is_triggered_only = yes
	
	option = {
		name = ALAS
		tooltip = { destroy_tradepost = FROM }
	}
}


######################
# Clean-up events
#####################

# on_character_convert_religion and on_character_convert_secret_religion
# If you converts to other religion removes some class and replaces it
#Delayer event
character_event = {
	id = WCDAC.9990

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			is_paladin_class_trigger = yes
			is_priest_class_trigger = yes
			is_loa_priest_class_trigger = yes
			is_monk_class_trigger = yes
		}
	}

	immediate = {
		character_event = { id = WCDAC.9995 days = 1 }
	}
}
#Delayed event
character_event = {
	id = WCDAC.9995
	
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		OR = {
			AND = {
				is_paladin_class_trigger = yes
				can_be_paladin_trigger = no
			}
			AND = {
				is_priest_class_trigger = yes
				can_be_priest_trigger = no
			}
			AND = {
				is_loa_priest_class_trigger = yes
				can_be_loa_priest_trigger = no
			}
			AND = {
				is_monk_class_trigger = yes
				can_be_monk_trigger = no
			}
		}
	}
	
	immediate = {
		if = {
			limit = { is_paladin_class_trigger = yes }
			add_character_modifier = { name = training_self_warrior duration = -1 }
		}
		else = {
			if = {
				limit = {
					OR = {
						true_religion_group = void_group
						true_religion = forsaken_cult
					}
				}
				add_character_modifier = { name = training_self_shadow_priest duration = -1 }
			}
			else_if = {
				limit = { true_religion_group = fel_group }
				add_character_modifier = { name = training_self_warlock duration = -1 }
			}
			else_if = {
				limit = { true_religion_group = necromancy_group }
				add_character_modifier = { name = training_self_necromancer duration = -1 }
			}
			else = {
				add_character_modifier = { name = training_self_shaman duration = -1 }
			}
		}
		character_event = { id = WCDAC.9996 }
	}
}
# Sets new class
character_event = {
	id = WCDAC.9996
	picture = GFX_evt_paladin_human
	desc = {
		trigger = {
			OR =  {
				is_paladin_class_trigger = yes
				is_priest_class_trigger = yes
			}
		}
		text = EVTDESC_WCDAC_9996
		picture = GFX_evt_paladin_human
	}
	desc = {
		trigger = { is_loa_priest_class_trigger = yes }
		text = EVTDESC_WCDAC_9996
		picture = GFX_evt_loas_worship
	}
	desc = {
		trigger = { is_monk_class_trigger = yes }
		text = EVTDESC_WCDAC_9996
		picture = GFX_evt_monk_pandaren_religion_group
	}

	is_triggered_only = yes

	immediate = {
		recount_experience_effect = yes
	}

	option = {
		name = EVTOPTA_WCDAC_9996

		add_class_trait_effect = yes
	}
}
