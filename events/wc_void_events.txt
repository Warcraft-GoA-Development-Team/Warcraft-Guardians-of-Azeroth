namespace = WCVOD

# Void corruption
# Stages:
# 3) 66-100 - Major exposure (character slowly turns into a n'raqi, no way back)
# 2) 33-65 - Minor exposure (void elf)
# 1) 0-32 - Natural form

# Moves on to the next stage of void corruption
character_event = {
	id = WCVOD.10
	desc = {
		trigger = { NOT = { check_variable = { which = void_corruption value = 66 } } }
		text = EVTDESC_WCVOD_10_case_01
	}
	desc = {
		trigger = { check_variable = { which = void_corruption value = 66 } }
		text = EVTDESC_WCVOD_10_case_02
	}
	picture = GFX_evt_voidwalker
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	hide_from = yes
	hide_new = yes

	trigger = {
		NOT = { has_character_flag = void_stage_add_flag }
		
		check_variable = { which = void_corruption value = 33 }
		trigger_if = {
			limit = { check_variable = { which = void_corruption value = 66 } }
			NOR = {
				has_character_modifier = void_corruption_2
				trait = being_void
			}
		}
		trigger_else = {
			NOR = {
				has_character_modifier = void_corruption_1
				has_character_modifier = void_corruption_2
				trait = being_void
			}
		}
	}
	
	immediate = {
		# Used to prevent twice firing of event
		set_character_flag = void_stage_add_flag
	}

	option = {
		name = {
			trigger = {
				NOT = { true_religion_group = void_group }
				NOT = { check_variable = { which = void_corruption value = 66 } }
			}
			text = ALAS
		}
		name = {
			trigger = {
				true_religion_group = void_group
				NOT = { check_variable = { which = void_corruption value = 66 } }
			}
			text = EXCELLENT
		}
		name = {
			trigger = { check_variable = { which = void_corruption value = 66 } }
			text = EVTOPTA_WCVOD_10
		}

		remove_void_corruption_modifiers_effect = yes
		add_void_corruption_modifier_effect = yes

		# Stage effects
		if = {
			limit = { check_variable = { which = void_corruption value = 66 }  }
			if = {
				limit = { NOT = { true_religion = old_gods_worship } }
				if = {
					limit = {
						OR = {
							trait = being_void
							# has_character_modifier = void_corruption_2		# Cagy cultists :3
							liege = { religion = old_gods_worship }
						}
					}
					if = { limit = { has_secret_religion = yes } clear_secret_religion = yes }
					religion = old_gods_worship
				}
				else = { set_secret_religion = old_gods_worship }
			}
		}
		character_event = { id = WCVOD.170 days = 3 }		# Changes religion
	}
	
	after = {
		clr_character_flag = void_stage_add_flag
	}
}
# Moves on to the previous stage of void corruption
character_event = {
	id = WCVOD.20
	desc = EVTDESC_WCVOD_20
	picture = GFX_evt_voidwalker
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	hide_from = yes
	hide_new = yes

	trigger = {
		NOT = { has_character_flag = void_stage_remove_flag }
		
		NOT = { check_variable = { which = void_corruption value = 66 } }
		trigger_if = {
			limit = { NOT = { check_variable = { which = void_corruption value = 33 } } }
			OR = {
				has_character_modifier = void_corruption_1
				has_character_modifier = void_corruption_2
			}
		}
		trigger_else = {
			has_character_modifier = void_corruption_2
		}
	}
	
	immediate = {
		# Used to prevent twice firing of event
		set_character_flag = void_stage_remove_flag
	}

	option = {
		name = {
			trigger = { NOT = { true_religion_group = void_group } }
			text = EXCELLENT
		}
		name = {
			trigger = { true_religion_group = void_group }
			text = ALAS
		}

		# Modifiers
		remove_void_corruption_modifiers_effect = yes
		add_void_corruption_modifier_effect = yes
	}
	
	after = {
		clr_character_flag = void_stage_remove_flag
	}
}

# Increases/decreases void corruption
character_event = {
	id = WCVOD.95

	is_triggered_only = yes
	hide_window = yes

	only_playable = yes
	min_age = 16
	only_capable = yes

	trigger = {
		is_alive = yes
		is_dying = no

		NOT = { trait = being_void }
		is_susceptible_to_void_corruption_trigger = yes
		OR = {
			AND = {
				OR = {
					true_religion_group = void_group
					has_character_flag = consuming_void_magic_flag
					location = { religion_group = void_group }
				}
				NOT = { check_variable = { which = void_corruption value = 35 } }	# Minimal Void Corruption if other conditions are met
			}
			AND = {
				OR = {
					NOR = {
						true_religion_group = void_group
						has_character_flag = consuming_void_magic_flag
						location = { religion_group = void_group }
					}
					check_variable = { which = void_corruption value = 40 }
				}
				check_variable = { which = void_corruption value = 1 }
			}
		}
	}

	immediate = {
		if = {
			limit = {
				is_susceptible_to_void_corruption_trigger = yes
				OR = {
					true_religion_group = void_group
					has_character_flag = consuming_void_magic_flag
					location = { religion_group = void_group }
				}
				NOT = { check_variable = { which = void_corruption value = 35 } }	# Minimal Void Corruption if other conditions are met
			}
			character_event = { id = WCVOD.100 }
		}
		else = {
			character_event = { id = WCVOD.110 }
		}
	}
}
# Increases void corruption
character_event = {
	id = WCVOD.100
	desc = EVTDESC_WCVOD_100
	picture = GFX_evt_voidwalker
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	option = {
		name = {
			trigger = { NOT = { true_religion_group = void_group } }
			text = ALAS
		}
		name = {
			trigger = { true_religion_group = void_group }
			text = EXCELLENT
		}

		add_5_void_corruption_effect = yes

		hidden_effect = { log = "Void corruption of [Root.GetBestName] is [Root.fel_corruption.GetValue]" }
	}
}
# Decreases void corruption
character_event = {
	id = WCVOD.110
	desc = EVTDESC_WCVOD_110
	picture = GFX_evt_voidwalker
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	option = {
		name = EXCELLENT

		remove_5_void_corruption_effect = yes

		hidden_effect = { log = "Void corruption of [Root.GetBestName] is [Root.fel_corruption.GetValue]" }
	}

	option = {
		name = EVTOPTB_WCFEL_110

		ai_chance = {
			factor = 0
		}
	}
}

# If character isn't a dark worshiper, converts to the void religions
character_event = {
	id = WCVOD.170
	desc = EVTDESC_WCVOD_170
	picture = GFX_evt_voidwalker

	is_triggered_only = yes

	trigger = {
		NOT = { has_character_flag = void_group_switch_flag }
		
		dark_true_religion_trigger = no
	}
	
	immediate = {
		set_character_flag = void_group_switch_flag
	}

	# No! Everything should be in balance!
	option = {
		trigger = {
			OR = {
				true_religion_group = light_group
				true_religion_group = arakkoa_religion_group
			}
		}
		name = EVTOPTA_WCVOD_170

		if = {
			limit = {
				OR = {
					is_dark_being_trigger = yes
					# has_character_modifier = void_corruption_2		# Cagy cultists :3
					liege = { religion = forsaken_cult }
				}
			}
			if = { limit = { has_secret_religion = yes } clear_secret_religion = yes }
			religion = forsaken_cult
		}
		else = { set_secret_religion = forsaken_cult }

		ai_chance = {
			factor = 40
		}
	}

	# The Void can be used for good!
	option = {
		name = EVTOPTC_WCVOD_170

		if = {
			limit = {
				OR = {
					is_dark_being_trigger = yes
					# has_character_modifier = void_corruption_2		# Cagy cultists :3
					liege = { religion = voidfarer }
				}
			}
			if = { limit = { has_secret_religion = yes } clear_secret_religion = yes }
			religion = voidfarer
		}
		else = { set_secret_religion = voidfarer }

		ai_chance = {
			factor = 10
		}
	}

	# I has seen the true face of the Void!
	option = {
		name = EVTOPTB_WCVOD_170

		if = {
			limit = {
				OR = {
					is_dark_being_trigger = yes
					# has_character_modifier = void_corruption_2		# Cagy cultists :3
					liege = { religion = old_gods_worship }
				}
			}
			if = { limit = { has_secret_religion = yes } clear_secret_religion = yes }
			religion = old_gods_worship
		}
		else = { set_secret_religion = old_gods_worship }

		ai_chance = {
			factor = 50
			
			evil_ai_chance_score = yes
			evil_ai_chance_religion_score = yes
		}
	}
	
	option = {
		name = I_WILL_NOT_BETRAY_RELIGION
		
		piety = -100
		
		ai_chance = {
			factor = 0
		}
	}
}

### Void mutations ###
character_event = {
	id = WCVOD.300

	# is_triggered_only = yes
	hide_window = yes

	only_playable = yes
	min_age = 16
	only_capable = yes
	prisoner = no
	religion = old_gods_worship

	trigger = {
		potential_mutation_trigger = yes
		allow_mutation_trigger = yes
		
		NOT = { has_character_flag = void_mutation_ongoing_flag } # Prevents multiple firing

		OR = {
			has_character_flag = void_mutation_flag
			has_character_modifier = void_corruption_2
		}
	}

	mean_time_to_happen = {
		years = 20
		modifier = {
			factor = 0.65
			is_shadow_priest_class_trigger = yes
		}
		modifier = {
			factor = 0.65
			check_variable = { which = void_corruption value = 99 }
		}
		modifier = {
			factor = 0.65
			check_variable = { which = void_corruption value = 88 }
		}
		modifier = {
			factor = 0.65
			check_variable = { which = void_corruption value = 77 }
		}
		modifier = {
			factor = 0.8
			is_mage_class_trigger = yes
		}
	}

	immediate = {
		set_character_flag = void_mutation_ongoing_flag # Prevents multiple firing
		
		if = {
			limit = { has_max_mutations_trigger = no }
			random_list = {
				10 = {
					set_character_flag = tentacle_arm_mutation_flag

					modifier = {
						factor = 0
						OR = {
							trait = tentacle_arm_mutation
							has_character_flag = tentacle_arm_mutation_flag
						}
					}
				}
				10 = {
					set_character_flag = chela_hand_mutation_flag

					modifier = {
						factor = 0
						OR = {
							trait = chela_hand_mutation
							has_character_flag = chela_hand_mutation_flag
						}
					}
				}
				10 = {
					set_character_flag = chitinous_growths_mutation_flag

					modifier = {
						factor = 0
						OR = {
							trait = chitinous_growths_mutation
							has_character_flag = chitinous_growths_mutation_flag
						}
					}
				}
				10 = {
					set_character_flag = spikes_mutation_flag

					modifier = {
						factor = 0
						OR = {
							trait = spikes_mutation
							has_character_flag = spikes_mutation_flag
						}
					}
				}
				10 = {
					set_character_flag = scales_mutation_flag

					modifier = {
						factor = 0
						OR = {
							trait = scales_mutation
							has_character_flag = scales_mutation_flag
						}
					}
					# Races that have scales by default
					modifier = {
						factor = 0
						is_scale_race_trigger = yes
					}
				}
				10 = {
					set_character_flag = eyes_mutation_flag

					modifier = {
						factor = 0
						OR = {
							trait = eyes_mutation
							has_character_flag = eyes_mutation_flag
						}
					}
				}
			}
			character_event = { id = WCVOD.305 }
		}
		else = {
			long_character_event = { id = WCVOD.310 }
		}
	}
}

# Notification
character_event = {
	id = WCVOD.305
	desc = {
		trigger  = { has_character_flag = tentacle_arm_mutation_flag }
		text = EVTDESC_WCVOD_305_tentacle_arm
	}
	desc = {
		trigger  = { has_character_flag = chela_hand_mutation_flag }
		text = EVTDESC_WCVOD_305_chela_hand
	}
	desc = {
		trigger  = { has_character_flag = chitinous_growths_mutation_flag }
		text = EVTDESC_WCVOD_305_chitinous_growths
	}
	desc = {
		trigger  = { has_character_flag = spikes_mutation_mutation_flag }
		text = EVTDESC_WCVOD_305_spikes
	}
	desc = {
		trigger  = { has_character_flag = scales_mutation_flag }
		text = EVTDESC_WCVOD_305_scales
	}
	desc = {
		trigger  = { has_character_flag = eyes_mutation_flag }
		text = EVTDESC_WCVOD_305_eyes
	}
	picture = GFX_evt_nraqi
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	# That's... wonderful!
	option = {
		name = EVTOPTA_WCVOD_305

		if = {
			limit = { has_character_flag = tentacle_arm_mutation_flag }
			clr_character_flag = tentacle_arm_mutation_flag
			add_tentacle_arm_mutation_effect = yes
		}
		if = {
			limit = { has_character_flag = chela_hand_mutation_flag }
			clr_character_flag = chela_hand_mutation_flag
			add_chela_hand_mutation_effect = yes
		}
		if = {
			limit = { has_character_flag = chitinous_growths_mutation_flag }
			clr_character_flag = chitinous_growths_mutation_flag
			add_chitinous_growths_mutation_effect = yes
		}
		if = {
			limit = { has_character_flag = spikes_mutation_flag }
			clr_character_flag = spikes_mutation_flag
			add_spikes_mutation_effect = yes
		}
		if = {
			limit = { has_character_flag = scales_mutation_flag }
			clr_character_flag = scales_mutation_flag
			add_scales_mutation_effect = yes
		}
		if = {
			limit = { has_character_flag = eyes_mutation_flag }
			clr_character_flag = eyes_mutation_flag
			add_eyes_mutation_effect = yes
		}
	}
	
	after = {
		clr_character_flag = void_mutation_ongoing_flag
	}
}

# Transformation into n'raqi
long_character_event = {
	id = WCVOD.310
	desc = EVTDESC_WCVOD_310
	picture = GFX_evt_nraqi
	border = GFX_event_long_frame_intrigue

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WCVOD_310

		remove_racial_traits_effect = yes
		add_trait = creature_nraqi
		add_trait_void_creature_effect = yes

		# Fixes immortal age
		add_age_back_effect = yes

		if = { limit = { has_secret_religion = yes } clear_secret_religion = yes }
		if = { limit = { NOT = { religion = old_gods_worship } } religion = old_gods_worship }
		if = { limit = { NOT = { culture = nraqi } } culture = nraqi }
		hidden_effect = { set_graphical_culture = nraqi }
	}
	
	after = {
		clr_character_flag = void_mutation_ongoing_flag
	}
}

# Transformation into c'thraxxi
long_character_event = {
	id = WCVOD.400
	desc = EVTDESC_WCVOD_400
	picture = GFX_evt_cthraxxi
	border = GFX_event_long_frame_intrigue

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WCVOD_400

		add_trait_void_creature_effect = yes
		remove_racial_traits_effect = yes
		add_trait = creature_cthraxxi

		# Fixes immortal age
		add_age_back_effect = yes

		if = { limit = { NOT = { religion = old_gods_worship } } religion = old_gods_worship }
		if = { limit = { has_secret_religion = yes } clear_secret_religion = yes }
		if = { limit = { NOT = { culture = nraqi } } culture = nraqi }
		hidden_effect = { set_graphical_culture = cthraxxi }
	}
	
	after = {
		clr_character_flag = transformation_into_cthraxxi_ongoing_flag
	}
}

# Nightmarish Tree
narrative_event = {
	id = WCVOD.410
	title = EVTTITLE_WCVOD_410
	desc = EVTDESC_WCVOD_410
	picture = GFX_evt_emerald_nightmare
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	# major = yes
	
	immediate = {
		if = {
			limit = { character = event_target:target_corruptor }
			any_player = {
				limit = {
					NOT = { character = ROOT }
				}
				narrative_event = { id = WCVOD.410 }
			}
		}
	}
	
	option = {
		trigger = {
			NOT = { true_religion = old_gods_worship }
			evil_true_religion_trigger = yes
		}
		name = FOOLS
	}

	option = {
		trigger = {
			true_religion = old_gods_worship
		}
		name = EVTOPTA_WCVOD_410		# The Nightmare is coming!
	}
	
	option = {
		trigger = { true_religion_group = druidism_group }
		name = EVTOPTB_WCVOD_410		# How did we let this happen?
	}
	
	option = {
		trigger = {
			evil_true_religion_trigger = no
			NOT = { true_religion_group = druidism_group }
		}
		name = EVTOPTC_WCVOD_410		# It's better to stay away from these places.
	}
	
	after = {
		tooltip = { corrupt_world_tree_effect = yes }
		hidden_effect = {
			if = {
				limit = { character = event_target:target_corruptor }
				corrupt_world_tree_effect = yes
			}
		}
	}
}

#############################
# 	the Twilight Hour		#
#############################

narrative_event = {
	id = WCVOD.605
	title = EVTTITLE_WCVOD_605
	desc = EVTDESC_WCVOD_605
	picture = GFX_evt_black_empire
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes

	major = yes
	major_trigger = {
		ai = no
	}
	show_root = yes

	immediate = {
		log = "WCVOD.605 fired for [Root.GetBestName]"
		
		73 = { province_event = { id = WCTHW.50 } } # When shit happens, Medivh tries to fix it

		hidden_effect = {
			primary_title = {
				e_black_empire = {
					copy_title_laws = PREV
					copy_title_history = PREV
				}
			}
		}
		
		activate_title = { title = e_black_empire status = yes }
		e_black_empire = { gain_title = ROOT }
		if = {
			limit = {
				any_demesne_title = {
					tier = EMPEROR
					NOT = { title = e_black_empire }
				}
			}
			any_demesne_title = {
				limit = {
					tier = EMPEROR
					NOT = { title = e_black_empire }
				}
				destroy_landed_title = THIS
			}
		}
		if = {
			limit = {
                is_female = yes
			}
			create_bloodline = {
				type = twilight_viceroy
                inheritance = matrilineal
			}
		}
        else = {
            create_bloodline = {
                type = twilight_viceroy
            }
        }		
		set_black_pact_government_effect = yes
	}

	option = {
		trigger = { NOT = { true_religion = old_gods_worship } }
		name = EVTOPTA_WCVOD_605
	}
	option = {
		trigger = { true_religion = old_gods_worship }
		name = EVTOPTB_WCVOD_605

		random = {
			chance = 33
			add_trait = lunatic
			modifier = {
				factor = 0
				trait = lunatic
			}
		}
	}
}

### Terror of the Tides
# Another way to spawn naga
character_event = {
	id = WCVOD.690
	
	is_triggered_only = yes
	hide_window = yes
	
	ai = no
	
	trigger = {
		OR = {
			multiplayer = no
			is_multiplayer_host_character = yes
		}
		
		NOT = { has_global_flag = naga_resurfaced_flag }
		
		year = 603
	}
	
	immediate = {
		narrative_event = { id = WCVOD.700 }
	}
}
# Delayer event
province_event = {
	id = WCVOD.699
	
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		NOT = { has_global_flag = naga_resurfaced_flag }
	}
	
	immediate = {
		holder_scope = { narrative_event = { id = WCVOD.700 } }
	}
}
# Delayed event
narrative_event = {
	id = WCVOD.700
	title = EVTTITLE_WCVOD_700
	desc = EVTDESC_WCVOD_700
	picture = GFX_evt_sea_serpent
	border = GFX_event_narrative_frame_war

	is_triggered_only = yes

	major = yes
	major_trigger = {
		ai = no
	}
	hide_from = yes
	hide_new = yes

	immediate = {
		set_global_flag = naga_resurfaced_flag
	}

	option = {
		trigger = { NOT = { true_religion = old_gods_worship } }
		name = EVTOPTA_WCVOD_700
	}
	option = {
		trigger = { true_religion = old_gods_worship }
		name = EVTOPTB_WCVOD_700
	}
}

#############################
# 		Xal'atath 			#
#############################
# Xal'atath choses a new host
province_event = {
	id = WCVOD.2000

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = {
				any_playable_ruler = {
					is_possible_xalatath_holder_trigger = yes
				}
			}
			random_playable_ruler = {
				limit = {
					is_possible_xalatath_holder_trigger = yes
				}
				log = "Xal'atath chose [This.GetBestName] as a new host"
				set_character_flag = xalatath_happened_flag
				narrative_event = { id = WCVOD.2005 }
			}
		}
		else = {
			log = "Xal'atath couldn't find a host"
			province_event = { id = WCVOD.2000 days = 365 }
		}
	}
}
# The old man gives you a mysterious blade
narrative_event = {
	id = WCVOD.2005
	title = EVTTITLE_WCVOD_2005
	desc = EVTDESC_WCVOD_2005
	picture = GFX_evt_throne_room
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	# Accept the gift
	option = {
		trigger = {
			NOR = {
				religion = old_gods_worship
				true_religion = old_gods_worship
			}
		}
		name = EVTOPTA_WCVOD_2005

		add_xalatath_effect = yes

		narrative_event = { id = WCVOD.2010 days = 7 }

		ai_chance = {
			factor = 50

			evil_ai_chance_score = yes
			evil_ai_chance_religion_score = yes
		}
	}
	# Reject the gift
	option = {
		trigger = {
			NOR = {
				religion = old_gods_worship
				true_religion = old_gods_worship
			}
		}
		name = EVTOPTB_WCVOD_2005

		hidden_effect = { 73 = { province_event = { id = WCVOD.2000 days = 30 } } }

		ai_chance = {
			factor = 50
		}
	}
	option = {
		trigger = {
			OR = {
				religion = old_gods_worship
				true_religion = old_gods_worship
			}
		}
		name = EVTOPTC_WCVOD_2005

		add_xalatath_effect = yes

		narrative_event = { id = WCVOD.2015 days = 7 }
	}
}
# Whisper of the Blade
narrative_event = {
	id = WCVOD.2010
	title = EVTTITLE_WCVOD_2005
	desc = EVTDESC_WCVOD_2010
	picture = GFX_evt_lunatic
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	trigger = {
		has_artifact = xalatath
	}

	# Xal'atath is calling me!
	option = {
		name = EVTOPTA_WCVOD_2010

		if = {
			limit = { NOT = { trait = lunatic } }
			random = {
				chance = 25
				add_trait = lunatic
			}
		}

		narrative_event = { id = WCVOD.2015 days = 7 }
	}
	# Throw it out of here!
	option = {
		name = EVTOPTB_WCVOD_2010

		destroy_xalatath_effect = yes
		if = {
			limit = { NOT = { trait = lunatic } }
			random = {
				chance = 15
				add_trait = lunatic
			}
		}

		ai_chance = {
			factor = 0
		}
	}
}
# Conversation with Xal'atath
narrative_event = {
	id = WCVOD.2015
	title = EVTTITLE_WCVOD_2005
	desc = EVTDESC_WCVOD_2015
	picture = GFX_evt_lunatic
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	trigger = {
		has_artifact = xalatath
	}

	option = {
		name = EXCELLENT

		hidden_effect = { narrative_event = { id = WCVOD.2020 days = 30 random = 60 } }
	}
}
# Xal'atath tells you about the Void!
narrative_event = {
	id = WCVOD.2020
	title = EVTTITLE_WCVOD_2005
	desc = EVTDESC_WCVOD_2020
	picture = GFX_evt_black_empire
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	trigger = {
		NOR = {
			religion_group = void_group
			true_religion_group = void_group
		}
		has_artifact = xalatath
	}

	# Tell me about the Void
	option = {
		name = EVTOPTA_WCVOD_2020

		if = {
			limit = {
				OR = {
					true_religion = holy_light
					true_religion = scarlet_light
				}
			}
			set_secret_religion = forsaken_cult
		}
		else = { set_secret_religion = voidfarer }
		if = {
			limit = { NOT = { trait = lunatic } }
			random = {
				chance = 15
				add_trait = lunatic
			}
		}

		ai_chance = {
			factor = 10
			
			evil_ai_chance_score = yes
			evil_ai_chance_religion_score = yes
		}
	}
	# Tell me about the Old Gods
	option = {
		name = EVTOPTB_WCVOD_2020

		if = {
			limit = { NOT = { trait = lunatic } }
			random = {
				chance = 50
				add_trait = lunatic
			}
		}
		set_secret_religion = old_gods_worship

		ai_chance = {
			factor = 40
			
			evil_ai_chance_score = yes
			evil_ai_chance_religion_score = yes
		}
	}
	# Never mind...
	option = {
		name = EVTOPTC_WCVOD_2020

		ai_chance = {
			factor = 50
		}
	}
}
# on_combat_pulse
# Use Xal'atath's power against your enemy?
character_event = {
	id = WCVOD.2025
	desc = EVTDESC_WCVOD_2025
	picture = GFX_evt_voidwalker
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	min_age = 16
	only_capable = yes
	prisoner = no

	trigger = {
		is_alive = yes
		is_dying = no

		OR = {
			war = yes
			liege = { war = yes }
		}

		has_artifact = xalatath
	}

	immediate = {
		if = {
			limit = { has_global_flag = full_report_flag }
			log = "WCVOD.2025 fired for [Root.GetBestName]"
		}

		save_event_target_as = target_xalatath_holder
		location = { save_event_target_as = target_province }
	}

	weight_multiplier = {
		days = 1
	}

	# Kill them all!
	option = {
		name = EVTOPTA_WCVOD_2025

		if = {
			limit = { NOT = { trait = cruel } }
			random = {
				chance = 50
				add_trait_cruel_effect = yes
				remove_trait_kind_effect = yes
			}
		}
		any_current_enemy = {
			limit = {
				war_with = ROOT
				any_army = {
					location = { province = event_target:target_province }
				}
			}
			random_army = {
				limit = { location = { province = event_target:target_province } }
				troops = -0.4
				morale = -0.4
			}
			hidden_effect = { character_event = { id = WCVOD.2026 } }
		}
		event_target:target_xalatath_holder = {
			random_army = {
				limit = { location = { province = event_target:target_province } }
				troops = -0.2
				morale = -0.2
			}
			hidden_effect = { character_event = { id = WCVOD.2026 } }
		}
	}
	# It's not worth it
	option = {
		name = EVTOPTB_WCVOD_2025
	}
}
# Notifies that target_xalatath_holder has used Xal'atath
character_event = {
	id = WCVOD.2026
	desc = EVTDESC_WCVOD_2026
	picture = GFX_evt_voidwalker
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WCVOD_2026

		tooltip = {
			ROOT = {
				random_army = {
					limit = { location = { province = event_target:target_province } }
					troops = -0.4
					morale = -0.4
				}
			}
			if = {
				limit = { NOT = { character = event_target:target_xalatath_holder } }
				event_target:target_xalatath_holder = {
					random_army = {
						limit = { location = { province = event_target:target_province } }
						troops = -0.2
						morale = -0.2
					}
				}
			}
		}
	}
}
# Checks the possibility of losing Xal'atath
character_event = {
	id = WCVOD.2030

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_artifact = xalatath
	}

	immediate = {
		# Xal'atath kills you if you're craven or content
		if = {
			limit = {
				OR = {
					trait = craven
					trait = content
				}
			}
			narrative_event = { id = WCVOD.2040 }
			break = yes
		}
		# Xal'atath may leave you if it doesn't like you
		random = {
			chance = 33
			modifier = {
				factor = 1.23
				NOT = { true_religion_group = void_group }
			}
			modifier = {
				factor = 1.23
				trait = kind
			}
			modifier = {
				factor = 1.23
				NOT = { true_religion_group = void_group }
				trait = zealous
			}
			modifier = {
				factor = 1.23
				trait = honest
			}
			modifier = {
				factor = 0.56
				true_religion_group = void_group
			}
			modifier = {
				factor = 0.56
				trait = ambitious
			}
			modifier = {
				factor = 0.56
				trait = brave
			}
			modifier = {
				factor = 0.56
				trait = cruel
			}
			modifier = {
				factor = 0.56
				trait = cynical
			}
			modifier = {
				factor = 0.56
				trait = deceitful
			}
			narrative_event = { id = WCVOD.2035 }
			break = yes
		}

		character_event = { id = WCVOD.2030 days = 730 }
	}
}
# on_death
# Loses Xal'atath after death
character_event = {
	id = WCVOD.2032

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_artifact = xalatath
	}

	immediate = {
		destroy_xalatath_effect = yes
		if = {
			limit = {
				is_ruler = yes
				is_lowborn = no
			}
			current_heir = {
				if = {
					limit =  { NOT = { character = ROOT } }
					narrative_event = { id = WCVOD.2035 days = 1 }
				}
			}
		}
	}
}
# Xal'atath disappears
narrative_event = {
	id = WCVOD.2035
	title = EVTTITLE_WCVOD_2005
	desc = EVTDESC_WCVOD_2035
	picture = GFX_evt_voidwalker
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	# You promised...
	option = {
		trigger = { character = FROM }
		name = EVTOPTA_WCVOD_2035

		destroy_xalatath_effect = yes
	}
	# Strange...
	option = {
		trigger = { NOT = { character = FROM } }
		name = EVTOPTB_WCVOD_2035
	}
}
# Xal'atath kills you
narrative_event = {
	id = WCVOD.2040
	title = EVTTITLE_WCVOD_2005
	desc = EVTDESC_WCVOD_2040
	picture = GFX_evt_voidwalker
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	trigger = {
		has_artifact = xalatath
	}

	# Argh!
	option = {
		name = ARGH

		destroy_xalatath_effect = yes
		death = { death_reason = death_murder_unknown_strangle }
	}
}

#############################
#		Random events					#
#############################

# Void events
character_event = {
	id = WCVOD.9900

	is_triggered_only = yes
	hide_window = yes

	min_age = 16
	only_playable = yes
	only_capable = yes
	prisoner = no

	trigger = {
		is_untouchable_trigger = no

		is_alive = yes
		is_dying = no

		is_susceptible_to_void_corruption_trigger = yes
	}

	weight_multiplier = {
		days = 1
		modifier = {
			factor = 4
			has_character_modifier = dark_presence
		}
		modifier = {
			factor = 2
			OR = {
				is_shadow_priest_class_trigger = yes
				true_religion_group = void_group
			}
		}
		modifier = {
			factor = 2
			trait = lunatic
		}
		modifier = {
			factor = 1.6
			trait = depressed
		}
		modifier = {
			factor = 1.6
			trait = paranoid
		}
		modifier = {
			factor = 1.4
			trait = being_void
		}
		modifier = {
			factor = 1.4
			has_character_modifier = void_corruption_2
		}
		modifier = {
			factor = 1.4
			has_character_modifier = void_corruption_1
		}
		modifier = {
			factor = 1.4
			trait = stressed
		}
		modifier = {
			factor = 1.2
			trait = ambitious
		}
		modifier = {
			factor = 1.2
			is_mage_class_trigger = yes
		}
		modifier = {
			factor = 2
			holds_living_old_god_prison_trigger = yes
		}
	}

	immediate = {
		random_list = {
			10 = {
				narrative_event = { id = WCVOD.9950 }	# The Nightmares
				modifier = {
					factor = 0
					trait = being_void
				}
				modifier = {
					factor = 5
					holds_living_old_god_prison_trigger = yes
				}
			}
			10 = {
				character_event = { id = WCVOD.10000 }	# Founds a void cube
				modifier = {
					factor = 0
					has_character_modifier = inflow_of_the_void
				}
			}
			10 = {
				narrative_event = { id = WCVOD.10005 }	# The Ancient Creature
			}
		}
	}
}

############ The Nightmares ############
narrative_event = {
	id = WCVOD.9950
	title = EVTTITLE_WCVOD_9950
	desc = EVTDESC_WCVOD_9950
	picture = GFX_evt_black_empire
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	trigger = {
		NOT = { has_character_flag = ongoing_nightmares_chain_flag }

		is_susceptible_to_void_corruption_trigger = yes
		NOT = { trait = being_void }
	}

	immediate = {
		set_character_flag = ongoing_nightmares_chain_flag
	}

	option = {
		name = EVTOPTA_WCVOD_9950

		random_list = {
			70 = {}
			20 = {
				add_trait = stressed
				hidden_tooltip = { character_event = { id = 38282 } }
				modifier = {
					factor = 0
					trait = stressed
				}
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
			10 = {
				add_trait_depressed_effect = yes
				modifier = {
					factor = 0
					trait = depressed
				}
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
		}
		random_list = {
			90 = {}
			10 = {
				add_trait_paranoid_effect = yes
				remove_trait_trusting_effect = yes
				modifier = {
					factor = 0
					trait = paranoid
				}
			}
		}
	}

	# Chooses nightmares for the future and completes the chain
	after = {
		narrative_event = { id = WCVOD.9965 days = 15 random = 30 }			# Rotting forest
		random = {
			chance = 50
			narrative_event = { id = WCVOD.9960 days = 30 random = 30 }		# Underwater nightmare
		}
		narrative_event = { id = WCVOD.9970 days = 45 random = 30 }			# N'raqi
		narrative_event = { id = WCVOD.9975 days = 60 random = 30 }			# Ritual
		character_event = { id = WCVOD.9990 days = 105 }
	}
}
# Underwater nightmare
narrative_event = {
	id = WCVOD.9960
	title = EVTTITLE_WCVOD_9950
	desc = EVTDESC_WCVOD_9960
	picture = GFX_evt_nzoth
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	trigger = {
		has_character_flag = ongoing_nightmares_chain_flag

		is_susceptible_to_void_corruption_trigger = yes
		NOT = { trait = being_void }
	}

	fail_trigger_effect = {
		clr_character_flag = ongoing_nightmares_chain_flag
	}

	option = {
		name = EVTOPTA_WCVOD_9950

		random_list = {
			60 = {}
			20 = {
				add_trait = stressed
				hidden_tooltip = { character_event = { id = 38282 } }
				modifier = {
					factor = 0
					trait = stressed
				}
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
			10 = {
				add_trait_depressed_effect = yes
				modifier = {
					factor = 0
					trait = depressed
				}
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
			10 = {
				add_trait = lunatic
				hidden_tooltip = { character_event = { id = 38304 } }
				modifier  = {
					factor = 0
					trait = lunatic
				}
			}
		}
		random_list = {
			80 = {}
			10 = {
				add_trait_paranoid_effect = yes
				remove_trait_trusting_effect = yes
				modifier = {
					factor = 0
					trait = paranoid
				}
			}
			10 = {
				add_trait_craven_effect = yes
				if = {
					limit = { trait = brave }
					remove_trait = brave
				}
				modifier = {
					factor = 0
					trait = craven
				}
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
		}
		random_list = {
			85 = {}
			6 = {
				add_trait_wounded_effect = yes
				modifier = {
					factor = 0
					trait = wounded
				}
			}
			5 = {
				add_trait_severely_injured_effect = yes
				modifier = {
					factor = 0
					trait = severely_injured
				}
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
			3 = {
				add_trait = one_legged
				hidden_tooltip = { character_event = { id = RIP.11503 } }
				add_trait_severely_injured_effect = yes
				modifier = {
					factor = 0
					trait = one_legged
				}
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
			1 = {
				death = { death_reason = death_accident_drowning }
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
		}
	}
}
# Rotting forest
narrative_event = {
	id = WCVOD.9965
	title = EVTTITLE_WCVOD_9950
	desc = EVTDESC_WCVOD_9965
	picture = GFX_evt_black_empire
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	trigger = {
		has_character_flag = ongoing_nightmares_chain_flag

		is_susceptible_to_void_corruption_trigger = yes
		NOT = { trait = being_void }
	}

	fail_trigger_effect = {
		clr_character_flag = ongoing_nightmares_chain_flag
	}

	option = {
		name = EVTOPTA_WCVOD_9950

		random_list = {
			80 = {}
			10 = {
				add_trait = stressed
				hidden_tooltip = { character_event = { id = 38282 } }
				modifier = {
					factor = 0
					trait = stressed
				}
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
			5 = {
				add_trait_depressed_effect = yes
				modifier = {
					factor = 0
					trait = depressed
				}
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
			5 = {
				add_trait = lunatic
				hidden_tooltip = { character_event = { id = 38304 } }
				modifier  = {
					factor = 0
					trait = lunatic
				}
			}
		}
		random_list = {
			75 = {}
			20 = {
				add_trait_paranoid_effect = yes
				remove_trait_trusting_effect = yes
				modifier = {
					factor = 0
					trait = paranoid
				}
			}
			5 = {
				add_trait_craven_effect = yes
				if = {
					limit = { trait = brave }
					remove_trait = brave
				}
				modifier = {
					factor = 0
					trait = craven
				}
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
		}
		random_list = {
			95 = {}
			5 = {
				add_trait_wounded_effect = yes
			}
		}
	}
}
# N'raqi
narrative_event = {
	id = WCVOD.9970
	title = EVTTITLE_WCVOD_9950
	desc = EVTDESC_WCVOD_9970
	picture = GFX_evt_nraqi
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	trigger = {
		has_character_flag = ongoing_nightmares_chain_flag

		is_susceptible_to_void_corruption_trigger = yes
		NOT = { trait = being_void }
	}

	fail_trigger_effect = {
		clr_character_flag = ongoing_nightmares_chain_flag
	}

	option = {
		name = EVTOPTA_WCVOD_9950

		random_list = {
			60 = {}
			20 = {
				add_trait = stressed
				hidden_tooltip = { character_event = { id = 38282 } }
				modifier = {
					factor = 0
					trait = stressed
				}
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
			10 = {
				add_trait_depressed_effect = yes
				modifier = {
					factor = 0
					trait = depressed
				}
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
			10 = {
				add_trait = lunatic
				hidden_tooltip = { character_event = { id = 38304 } }
				modifier  = {
					factor = 0
					trait = lunatic
				}
			}
		}
		random_list = {
			75 = {}
			5 = {
				add_trait_paranoid_effect = yes
				remove_trait_trusting_effect = yes
				modifier = {
					factor = 0
					trait = paranoid
				}
			}
			20 = {
				add_trait_craven_effect = yes
				if = {
					limit = { trait = brave }
					remove_trait = brave
				}
				modifier = {
					factor = 0
					trait = craven
				}
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
		}
		random_list = {
			80 = {}
			9 = {
				add_trait_wounded_effect = yes
			}
			6 = {
				add_trait_severely_injured_effect = yes
				modifier = {
					factor = 0
					trait = severely_injured
				}
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
			5 = {
				add_trait = one_legged
				hidden_tooltip = { character_event = { id = RIP.11503 } }
				add_trait_severely_injured_effect = yes
				modifier = {
					factor = 0
					trait = one_legged
				}
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
		}
	}
}
# Ritual
narrative_event = {
	id = WCVOD.9975
	title = EVTTITLE_WCVOD_9950
	desc = EVTDESC_WCVOD_9975
	picture = GFX_evt_sacrifice
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	trigger = {
		has_character_flag = ongoing_nightmares_chain_flag

		is_susceptible_to_void_corruption_trigger = yes
		NOT = { trait = being_void }
	}

	fail_trigger_effect = {
		clr_character_flag = ongoing_nightmares_chain_flag
	}

	option = {
		name = EVTOPTA_WCVOD_9950

		random_list = {
			80 = {}
			10 = {
				add_trait = stressed
				hidden_tooltip = { character_event = { id = 38282 } }
				modifier = {
					factor = 0
					trait = stressed
				}
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
			5 = {
				add_trait_depressed_effect = yes
				modifier = {
					factor = 0
					trait = depressed
				}
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
			5 = {
				add_trait = lunatic
				hidden_tooltip = { character_event = { id = 38304 } }
				modifier  = {
					factor = 0
					trait = lunatic
				}
			}
		}
		random_list = {
			60 = {}
			10 = {
				add_trait_paranoid_effect = yes
				remove_trait_trusting_effect = yes
				modifier = {
					factor = 0
					trait = paranoid
				}
			}
			10 = {
				add_trait_craven_effect = yes
				if = {
					limit = { trait = brave }
					remove_trait = brave
				}
				modifier = {
					factor = 0
					trait = craven
				}
				modifier = {
					factor = 0
					OR = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
			}
			10 = {
				add_trait_cruel_effect = yes
				remove_trait_kind_effect = yes
				modifier = {
					factor = 0
					trait = cruel
				}
			}
			10 = {
				add_trait_wroth_effect = yes
				remove_trait_patient_effect = yes
				modifier = {
					factor = 0
					trait = wroth
				}
			}
		}
	}
}
# Choses the end
character_event = {
	id = WCVOD.9990

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		clr_character_flag = ongoing_nightmares_chain_flag

		random_list = {
			85 = {
				trigger = {
					NOT = {
						religion = old_gods_worship
						true_religion = old_gods_worship
					}
				}
				
				narrative_event = { id = WCVOD.9991 }		# Good end

				modifier = {
					factor = 1.5
					has_benevolent_trait_trigger = yes
				}
				modifier = {
					factor = 1.5
					has_pleasant_trait_trigger = yes
				}
				modifier = {
					factor = 1.5
					has_pious_trait_trigger = yes
				}
				modifier = {
					factor = 1.5
					trait = brave
				}
			}
			15 = {
				narrative_event = { id = WCVOD.9995 }		# Bad end

				modifier = {
					factor = 2
					trait = lunatic
				}
				modifier = {
					factor = 1.5
					has_evil_trait_trigger = yes
				}
				modifier = {
					factor = 1.5
					has_unpleasant_trait_trigger = yes
				}
				modifier = {
					factor = 1.5
					has_impious_trait_trigger = yes
				}
				modifier = {
					factor = 1.5
					trait = depressed
				}
				modifier = {
					factor = 1.5
					trait = stressed
				}
				modifier = {
					factor = 1.5
					trait = craven
				}
			}
		}
	}
}
# Good end of the nightmares
narrative_event = {
	id = WCVOD.9991
	title = EVTTITLE_WCVOD_9950
	desc = EVTDESC_WCVOD_9991
	picture = GFX_evt_black_empire
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	trigger = {
		is_susceptible_to_void_corruption_trigger = yes
		NOT = { trait = being_void }
	}

	option = {
		name = EVTOPTA_WCVOD_9991
	}
}
# Bad end
narrative_event = {
	id = WCVOD.9995
	title = EVTTITLE_WCVOD_9950
	desc = EVTDESC_WCVOD_9995
	picture = GFX_evt_black_empire
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	trigger = {
		is_susceptible_to_void_corruption_trigger = yes
		NOT = { trait = being_void }
	}

	option = {
		trigger = { NOT = { true_religion = old_gods_worship } }
		name = EVTOPTA_WCVOD_9995

		random_list = {
			50 = {}
			40 = {
				add_trait = lunatic
				hidden_tooltip = { character_event = { id = 38304 } }
				modifier = {
					factor = 0
					trait = lunatic
				}
			}
			10 = { death = { death_reason = death_suicide_hanging } }
		}

		ai_chance = {
			factor = 50
		}
	}

	option = {
		name = EVTOPTB_WCVOD_9995

		if = { limit = { NOT = { true_religion = old_gods_worship } } set_secret_religion = old_gods_worship }
		if = {
			limit = { NOT = { trait = lunatic } }
			random = {
				chance = 75
				add_trait = lunatic
				hidden_tooltip = { character_event = { id = 38304 } }
			}
		}
		add_15_void_corruption_effect = yes

		ai_chance = {
			factor = 50
			
			evil_ai_chance_score = yes
			evil_ai_chance_religion_score = yes
		}
	}
}

# Founds a void cube
# Actually, this's a copy of "fel crystal" event
character_event = {
	id = WCVOD.10000
	desc = EVTDESC_WCVOD_10000
	picture = GFX_evt_voidwalker
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	# Use its power
	option = {
		name = {
			trigger = { NOT = { trait = being_void } }
			text = EVTOPTA_WCFEL_9950
		}
		name = {
			trigger = { trait = being_void }
			text = EXCELLENT
		}
		add_15_void_corruption_effect = yes
		add_character_modifier = { name = inflow_of_the_void duration = 1825 }

		ai_chance = {
			factor = 50
			
			evil_ai_chance_score = yes
			evil_ai_chance_religion_score = yes
		}
	}

	# Destroy it!
	option = {
		trigger = { NOT = { trait = being_void } }
		name = EVTOPTB_WCFEL_9950

		random_list = {
			25 = { remove_5_void_corruption_effect = yes }
			75 = { remove_15_void_corruption_effect = yes }
		}

		ai_chance = {
			factor = 50
		}
	}
}

############ The Ancient Creature ############
# Founds an ancient creature
narrative_event = {
	id = WCVOD.10005
	title = EVTTITLE_WCVOD_10005
	desc = EVTDESC_WCVOD_10005
	picture = GFX_evt_desert
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	option = {
		trigger = { NOT = { religion = old_gods_worship } }
		name = EVTOPTA_WCVOD_10005

		hidden_effect = { narrative_event = { id = WCVOD.10010 days = 30 random = 30 } }
	}

	option = {
		trigger = { religion = old_gods_worship }
		name = EVTOPTB_WCVOD_10005

		hidden_effect = {
			narrative_event = { id = WCVOD.10015 days = 35 random = 30 }
		}
	}

	option = {
		trigger = { NOT = { religion = old_gods_worship } }
		name = EVTOPTC_WCVOD_10005

		custom_tooltip = {
			text = stops_the_event_chain
		}
	}
}
narrative_event = {
	id = WCVOD.10010
	title = EVTTITLE_WCVOD_10005
	desc = EVTDESC_WCVOD_10010
	picture = GFX_evt_desert
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WCVOD_10010

		hidden_effect = { narrative_event = { id = WCVOD.10015 days = 5 } }
	}

	option = {
		name = EVTOPTB_WCVOD_10010

		custom_tooltip = {
			text = stops_the_event_chain
		}
	}
}
narrative_event = {
	id = WCVOD.10015
	title = EVTTITLE_WCVOD_10005
	desc = {
		trigger = { has_character_flag = found_cthraxxi_good_end_flag }
		text = EVTDESC_WCVOD_10015_good
	}
	desc = {
		trigger = { has_character_flag = found_cthraxxi_bad_end_flag }
		text = EVTDESC_WCVOD_10015_bad
	}
	picture = GFX_evt_cthraxxi
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				religion = old_gods_worship
				true_religion = old_gods_worship
			}
			set_character_flag = found_cthraxxi_good_end_flag
		}
		else = {
			set_character_flag = found_cthraxxi_bad_end_flag
		}
		create_character = {
			dynasty = none
			religion = old_gods_worship
			culture = nraqi
			female = no
			age = 1000000
			attributes = {
				martial=5 diplomacy=5 stewardship=5 intrigue=5 learning=5
			}
			random_traits = yes
			flag = race_delay_flag
		}
		new_character = {
			save_event_target_as = target_cthraxxi

			set_graphical_culture = cthraxxi
			
			character_event = { id = WCRAC.10 }
			
			# Education
			remove_education_effect = yes
			add_trait = brilliant_strategist
			add_trait = class_warrior_7
			
			# Traits
			remove_trait_silently_wroth_effect = yes
			add_trait_silently_patient_effect = yes

			give_nickname = nick_the_devourer
		}
	}

	option = {
		trigger = { has_character_flag = found_cthraxxi_good_end_flag }

		name = EXCELLENT

		# reverse_opinion = { modifier = opinion_loyal_servant who = event_target:target_cthraxxi }
	}
	option = {
		trigger = { has_character_flag = found_cthraxxi_bad_end_flag }

		name = ALAS

		prestige = -250
		hidden_effect = {
			event_target:target_cthraxxi = { death = { death_reason = death_missing } }
		}
	}

	after = {
		clr_character_flag = found_cthraxxi_good_end_flag
		clr_character_flag = found_cthraxxi_bad_end_flag
	}
}

### Tekahn's Bargain ###
# An agent of the Twilight's Hammer visits the Neferset and offers to lift the Curse of Flesh
narrative_event = {
	id = WCVOD.10100
	title = EVTTITLE_WCVOD_10100
	desc = EVTDESC_WCVOD_10100
	picture = GFX_evt_cthun_priestess
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes
	
	only_playable = yes

	trigger = {
		trait = creature_tolvir
		is_dark_being_trigger = no
		culture = tolvir	# Must be of tol'vir culture
		is_shadow_priest_class_trigger = yes	# Only shadow priests can be contacted by the entity
		NOT = { 
			religion = old_gods_worship		# Must NOT be a servant of the Old Gods at the time
			true_religion = old_gods_worship
		}

		has_landed_title = c_neferset	# Must hold the city of Neferset
		has_global_flag = uldum_has_opened_flag		# Uldum must not be isolated
		NOT = { has_global_flag = dark_pharaohs_bargain_flag }	# This is here so event can't fire twice
	}

	immediate = {
		set_global_flag = dark_pharaohs_bargain_flag
		save_event_target_as = target_dark_pharaoh
	}

	option = {
		name = EVTOPTA_WCVOD_10100

		event_target:target_dark_pharaoh = { narrative_event = { id = WCVOD.10105 } }
		event_target:target_dark_pharaoh = { give_nickname = nick_the_dark_pharaoh }

		ai_chance = {
			factor = 1
		}
	}

	option = {
		name = EVTOPTB_WCVOD_10100

		custom_tooltip = {
			text = you_reject_the_offer
		}

		ai_chance = {
			factor = 0
		}
	}
}

# A ritual commences, 'Tekahn' regains his stone body
narrative_event = {
	id = WCVOD.10105
	title = EVTTITLE_WCVOD_10105
	desc = EVTDESC_WCVOD_10105
	picture = GFX_evt_cthun_priestess
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	# I shall serve the Old Gods
	option = {
		name = EVTOPTA_WCVOD_10105
		become_stone_tolvir_old_gods_effect = yes
		
		ai_chance = {
			factor = 50
			
			evil_ai_chance_score = yes
			evil_ai_chance_religion_score = yes
		}
	}

	# Tekahn does not serve, Tekahn rules
	option = {
		name = EVTOPTB_WCVOD_10105
		become_stone_tolvir_voidfarer_effect = yes
		custom_tooltip = {
			text = defiance_wont_go_unpunished
		}
		event_target:target_dark_pharaoh = { narrative_event = { id = WCVOD.10110 days = 60 } }	# At this point he cannot die of natural causes
		
		ai_chance = {
			factor = 50
		}
	}
}

# Twilight assassins attempt to strike down the rebellious 'Tekahn'
narrative_event = {
	id = WCVOD.10110
	title = EVTTITLE_WCVOD_10110
	desc = EVTDESC_WCVOD_10110
	picture = GFX_evt_tekahn
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	# Fight for your life
	option = {
		name = EVTOPTA_WCVOD_10110

		# A chance for him to either survive or die
		random_list = {
			80 = {
				custom_tooltip = {
					text = tekahn_emerge_victorious
					event_target:target_dark_pharaoh = { narrative_event = { id = WCVOD.10120 } }
				}
				good_soldier_outcome_score = yes
				is_good_intrigue_character_score = yes
			}
			20 = {
				custom_tooltip = {
					text = tekahn_failure
				}
				event_target:target_dark_pharaoh = { narrative_event = { id = WCVOD.10121 } }
			}
		}
	}
}

# 'Tekahn' is successful
narrative_event = {
	id = WCVOD.10120
	title = EVTTITLE_WCVOD_10120
	desc = EVTDESC_WCVOD_10120
	picture = GFX_evt_tekahn
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	# Now I am complete
	option = {
		name = EVTOPTA_WCVOD_10120

		prestige = 500
	}
}

# 'Tekahn' dies
narrative_event = {
	id = WCVOD.10121
	title = EVTTITLE_WCVOD_10121
	desc = EVTDESC_WCVOD_10121
	picture = GFX_evt_cthun_priestess
	border = GFX_event_narrative_frame_intrigue

	is_triggered_only = yes

	# This is not what the vision promised!
	option = {
		name = EVTOPTA_WCVOD_10121

		event_target:target_dark_pharaoh = { death = { death_reason = death_murder_butchered } }
	}
}